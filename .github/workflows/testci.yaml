name: ci_test

on:

  workflow_dispatch:
    inputs:
      ref_sha:
        description: 'SHA of ref'
        required: false
      update_cache:
        description: 'update cache'
        required: false        

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CUDA_VERSION: 11.2.2
  cuda_version_major_minor: 11.2

jobs:


  windows:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019
    
    steps:

      - name: checkout head
        if: ${{ ! github.event.inputs.ref_sha}}
        uses: actions/checkout@v2
#vcpkg install --triplet x64-windows getopt
      - name: configure_cmake
        run: |          
          echo $env:VCPKG_INSTALLATION_ROOT
          $vpkg_root0 = $env:VCPKG_INSTALLATION_ROOT+'\scripts\buildsystems\vcpkg.cmake'
          echo $vpkg_root0
          $vpkg_root = $vpkg_root0 -replace "\\", "/"
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{vpkg_root}} -DBUILD_TESTS=ON -G "Visual Studio 16" -T host=x64,version=14.25 -Dproto=ON

      - name: Find Cache VCPKG
        id: cache_hits_conan
        uses: actions/cache@v2
        continue-on-error: true
        if: ${{! github.event.inputs.update_cache}}
        env:
          cache-name: cache-vcpkg
        with:
          path: |
            $env:VCPKG_INSTALLATION_ROOT
            !$env:VCPKG_INSTALLATION_ROOT\buildtrees
          key: runner.os−{{ env.cache-name }}-github.sha−{{ github.event.inputs.ref_sha}}
          restore-keys: |
            runner.os−{{ env.cache-name }}-${{github.sha}}-
            runner.os−{{ env.cache-name }}-